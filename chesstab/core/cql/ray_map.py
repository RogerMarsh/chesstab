# ray_map.py
# Copyright 2022 Roger Marsh
# Licence: See LICENCE (BSD licence)

"""Map ray components to squares in lines.

A ray has from 2 to 8 components.  These are mapped to the 8 squares in a
file or rank, or the 2 to 8 squares in a diagonal with at least one square
for each component.  The remaining squares between the first and last
component must be empty squares.  Any other squares in the file, rank, or
diagonal are ignored.

RAY_MAP is indexed by (<ray component count>, <line length>) and each item
contains instructions to generate the ways the components occupy the ray.

"""
# Key (x, ..., y) implies see value entry (i, ..., j) as (0, i, ..., j, y-1).
RAY_MAP = {
    (8, 8): ((1, 2, 3, 4, 5, 6),),
    (7, 8): (
        (1, 2, 3, 4, 5),
        (1, 2, 3, 4, 6),
        (1, 2, 3, 5, 6),
        (1, 2, 4, 5, 6),
        (1, 3, 4, 5, 6),
        (2, 3, 4, 5, 6),
    ),
    (7, 7): ((1, 2, 3, 4, 5),),
    (6, 8): (
        (1, 2, 3, 4),
        (1, 2, 3, 6),
        (1, 2, 5, 6),
        (1, 2, 4, 6),
        (1, 2, 3, 5),
        (1, 2, 4, 5),
        (1, 3, 4, 5),
        (2, 3, 4, 5),
    ),
    (6, 7): (
        (1, 2, 3, 4),
        (1, 2, 3, 5),
        (1, 2, 4, 5),
        (1, 3, 4, 5),
        (2, 3, 4, 5),
    ),
    (6, 6): ((1, 2, 3, 4),),
    (5, 8): (
        (1, 2, 3),
        (1, 2, 6),
        (1, 5, 6),
        (4, 5, 6),
        (3, 5, 6),
        (2, 5, 6),
        (1, 4, 6),
        (3, 4, 6),
        (2, 4, 6),
        (1, 3, 6),
        (2, 3, 6),
        (1, 2, 5),
        (1, 4, 5),
        (3, 4, 5),
        (2, 4, 5),
        (1, 3, 5),
        (2, 3, 5),
        (1, 2, 4),
        (1, 3, 4),
        (2, 3, 4),
    ),
    (5, 7): (
        (1, 2, 3),
        (1, 2, 5),
        (1, 4, 5),
        (3, 4, 5),
        (2, 4, 5),
        (1, 3, 5),
        (2, 3, 5),
        (1, 2, 4),
        (1, 3, 4),
        (2, 3, 4),
    ),
    (5, 6): ((1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)),
    (5, 5): ((1, 2, 3),),
    (4, 8): (
        (1, 2),
        (1, 6),
        (5, 6),
        (4, 6),
        (3, 6),
        (2, 6),
        (1, 5),
        (4, 5),
        (3, 5),
        (2, 5),
        (1, 4),
        (3, 4),
        (2, 4),
        (1, 3),
        (2, 3),
    ),
    (4, 7): (
        (1, 2),
        (1, 5),
        (4, 5),
        (3, 5),
        (2, 5),
        (1, 4),
        (3, 4),
        (2, 4),
        (1, 3),
        (2, 3),
    ),
    (4, 6): ((1, 2), (1, 4), (3, 4), (2, 4), (1, 3), (2, 3)),
    (4, 5): ((1, 2), (1, 3), (2, 3)),
    (4, 4): ((1, 2),),
    (3, 8): ((1,), (6,), (5,), (4,), (3,), (2,)),
    (3, 7): ((1,), (5,), (4,), (3,), (2,)),
    (3, 6): ((1,), (4,), (3,), (2,)),
    (3, 5): ((1,), (3,), (2,)),
    (3, 4): ((1,), (2,)),
    (3, 3): ((1,),),
    (2, 8): ((),),
    (2, 7): ((),),
    (2, 6): ((),),
    (2, 5): ((),),
    (2, 4): ((),),
    (2, 3): ((),),
    (2, 2): ((),),
}
